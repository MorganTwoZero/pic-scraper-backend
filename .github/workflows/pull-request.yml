name: Pull request

on:
  pull_request:
    types: [ opened, synchronize, reopened ]
    branches:
      - main

env:
  RUSTFLAGS: -D warnings
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15.1-alpine
        env:
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432

    env:
      SQLX_VERSION: 0.7.*
      SQLX_FEATURES: "rustls,postgres"
      DATABASE_URL: "postgres://postgres:password@localhost:5432/postgres"

    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        id: cache
        with:
          key: ${{ runner.os }}-sqlx-${{ env.SQLX_VERSION }}

      - name: Install sqlx-cli
        if: ${{ steps.cache.outputs.cache-hit == 'false' }}
        run: >
          cargo install sqlx-cli --force
          --version=${{ env.SQLX_VERSION }}
          --features ${{ env.SQLX_FEATURES }}
          --no-default-features --locked

      - name: Migrate database
        run: |
          sudo apt-get install libpq-dev -y
          SKIP_DOCKER=true ./scripts/init_db.sh

      - name: Check sqlx-data.json is up-to-date
        run: cargo sqlx prepare --check --workspace -- --bin pic-scraper-backend

      - name: Run cargo test
        run: cargo test

  fmt:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - run: cargo fmt --all -- --check

  clippy:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15.1-alpine
        env:
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432

    env:
      SQLX_VERSION: 0.7.*
      SQLX_FEATURES: "rustls,postgres"

    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - uses: Swatinem/rust-cache@v2
        id: cache
        with:
          key: ${{ runner.os }}-sqlx-${{ env.SQLX_VERSION }}

      - name: Install sqlx-cli
        if: ${{ steps.cache.outputs.cache-hit == 'false' }}
        run: >
          cargo install sqlx-cli --force
          --version=${{ env.SQLX_VERSION }}
          --features ${{ env.SQLX_FEATURES }}
          --no-default-features --locked

      - name: Migrate database
        run: |
          sudo apt-get install libpq-dev -y
          SKIP_DOCKER=true ./scripts/init_db.sh

      - run: cargo clippy -- -D warnings

  security_audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}